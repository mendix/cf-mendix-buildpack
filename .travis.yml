# This file is autogenerated from .travis.yml.j2
#
#   To generate, run dev/generate_travis_ci_config.py
#

if: tag is blank

os: linux
dist: bionic
language: python
python: 3.6

services:
  - docker

env:
  global:
    - TEST_PREFIX=travis-$TRAVIS_JOB_ID

cache:
  directories:
  - $HOME/.cache/pip
  - $HOME/.cf
  - dist

install:
  - make install_requirements

_install_cf_cli_and_local: &install_cf_cli_and_local |-
  wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
  echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
  sudo apt-get update && sudo apt-get install -y cf-cli
  sudo curl -s https://download.mendix.com/Mendix-CA-G2.crt -o /usr/local/share/ca-certificates/ca.crt && sudo update-ca-certificates
  cf install-plugin cflocal -f

_get_host: &get_host |-
  export TEST_HOST=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+')
  echo $TEST_HOST

jobs:
  include:
    - stage: build
      script: make lint test_unit build
    - stage: test
      before_install:
        - *install_cf_cli_and_local
      before_script:
        - *get_host
      script:
        - make test_integration TEST_FILES='tests/integration/test_access_restrictions.py tests/integration/test_appdynamics.py tests/integration/test_client_certificates.py tests/integration/test_constants.py tests/integration/test_custom_headers.py tests/integration/test_custom_runtime_settings.py' &
        - MAKE_PID=$!
        - while [ -e /proc/$MAKE_PID ]; do sleep 60 && echo -n "."; done
        - sleep 15
        - wait $MAKE_PID
        - sleep 5
    - stage: test
      before_install:
        - *install_cf_cli_and_local
      before_script:
        - *get_host
      script:
        - make test_integration TEST_FILES='tests/integration/test_databroker.py tests/integration/test_datadog.py tests/integration/test_debug_container.py tests/integration/test_deprecations.py tests/integration/test_instadeploy.py tests/integration/test_jdbc_parameters.py' &
        - MAKE_PID=$!
        - while [ -e /proc/$MAKE_PID ]; do sleep 60 && echo -n "."; done
        - sleep 15
        - wait $MAKE_PID
        - sleep 5
    - stage: test
      before_install:
        - *install_cf_cli_and_local
      before_script:
        - *get_host
      script:
        - make test_integration TEST_FILES='tests/integration/test_jdk_versions.py tests/integration/test_jetty_config.py tests/integration/test_logging.py tests/integration/test_mda_app_deployed.py tests/integration/test_metrics.py tests/integration/test_mono.py' &
        - MAKE_PID=$!
        - while [ -e /proc/$MAKE_PID ]; do sleep 60 && echo -n "."; done
        - sleep 15
        - wait $MAKE_PID
        - sleep 5
    - stage: test
      before_install:
        - *install_cf_cli_and_local
      before_script:
        - *get_host
      script:
        - make test_integration TEST_FILES='tests/integration/test_mpk_app_deployed.py tests/integration/test_mxadmin_exposed_authorized.py tests/integration/test_telegraf.py tests/integration/test_telegraf_datadog.py tests/integration/test_termination.py' &
        - MAKE_PID=$!
        - while [ -e /proc/$MAKE_PID ]; do sleep 60 && echo -n "."; done
        - sleep 15
        - wait $MAKE_PID
        - sleep 5
    - stage: deploy
      if: branch = master
      install: skip
      script: skip
      before_deploy: |-
        git config --local user.name $GIT_USERNAME
        git config --local user.email $GIT_EMAIL
        export TRAVIS_TAG=$(cat VERSION | tr -d '\n')
        if [ $(git tag -l "$TRAVIS_TAG") ]; then
          echo "Existing tag detected, skipping deploy" && exit 0 
        else
          git tag "$TRAVIS_TAG"
        fi
      deploy:
        provider: releases
        token: $GITHUB_ACCESS_TOKEN
        name: "$TRAVIS_TAG: $TRAVIS_COMMIT_MESSAGE"
        file: dist/cf-mendix-buildpack.zip
        draft: true
        skip_cleanup: true
        on:
          branch: master

notifications:
  email: false