worker_processes 1;
daemon off;

error_log stderr;
events { worker_connections 4096; }

http {
    HTTP_HEADERS
    access_log off; # we use cloud foundry RTR logging
    default_type application/octet-stream;
    include mime.types;
    include proxy_params;
    sendfile on;

    client_max_body_size 1G;

    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

    tcp_nopush on;
    keepalive_timeout 30;
    absolute_redirect off;
    server_tokens off;

    upstream mendix {
        server 127.0.0.1:RUNTIME_PORT;
        keepalive 8;
    }

    upstream mendix_admin {
        server 127.0.0.1:ADMIN_PORT;
        keepalive 8;
    }

    upstream mendix_mxbuild {
        server 127.0.0.1:DEPLOY_PORT;
        keepalive 8;
    }

    server {
        listen NGINX_PORT;
        server_name _;
        root ROOT/web/;
        index index.html index.htm;

        error_page 403 @403-custom;
        error_page 404 @404-custom;
        error_page 503 @503-custom;

CONFIG

        location /_mxadmin/ {
            auth_basic "Restricted";
            auth_basic_user_file ROOT/nginx/.htpasswd;
            proxy_pass http://mendix_admin/;
            satisfy any;
        }

        location /_mxbuild/ {
            auth_basic "Restricted";
            auth_basic_user_file ROOT/nginx/.htpasswd-mxbuild;
            MXBUILD_UPSTREAM;
            error_page 502 503 504 =503 @503-for-post;
            satisfy any;
        }

        location /client-cert-check-internal {
            internal;
            if ($http_ssl_client_s_dn) {
                return 200;
            }
            return 403;
        }
        location @403 {
            root ROOT/nginx/monsters/;
            try_files /403-appnode-app.html =403;
        }
        location @403-custom {
            try_files /error_page/403.html @403;
        }
        location @404 {
            root ROOT/nginx/monsters/;
            try_files /404-appnode-app.html =404;
        }
        location @404-custom {
            try_files /error_page/404.html @404;
        }
        location @503-for-post {
            return 503;
        }
        location @503 {
            root ROOT/nginx/monsters/;
            try_files /503-appnode-app.html =503;
        }
        location @503-custom {
            try_files /error_page/offline.html @503;
        }
    }
}

